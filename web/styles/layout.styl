/* ==========================================================================
   Layout
  
   Layout rules are intended for positioning and placement, not stylistic
   properties like fonts and colors.
  
   References:
     - [Layout Rules](https://smacss.com/book/type-layout)
   ========================================================================== */


/**
 * Container.
 *
 * The container element encapsulates all other visual elements on the page.
 *
 * Example HTML:
 *
 * <div id="container">
 * </div>
 *
 * References:
 *   - [Why should I use a container div in HTML?](https://stackoverflow.com/questions/354739/why-should-i-use-a-container-div-in-html)
 *   - [What is the correct way to do a CSS Wrapper?](https://stackoverflow.com/questions/5275410/what-is-the-correct-way-to-do-a-css-wrapper)
 *   - [The Best Way to Implement a “Wrapper” in CSS](https://css-tricks.com/best-way-implement-wrapper-css/)
 */
#container
  position: relative
  padding-bottom: 30px
  +breakpoint("tablet")
    margin: 0 auto
    padding-bottom: 60px




/* Menu
   -------------------------------------------------------------------------- */

/**
 * Menu.
 *
 * On mobile devices, the menu trigger is used on mobile devices to reveal the
 * menu.  The trigger is displayed as a hamburger button, mimicking UI patterns
 * common to mobile applications.
 *
 * 0. On mobile devices, float the logo to the left.  The menu trigger is
 *    correspondingly floated to the right.
 * 1. Set the height to 100 pixels, in accordance with mobile-first responsive
 *    design.
 * 2. On tablet devices, fix the position to the top left of the viewport, with
 *    a width of 260 pixels and full height.
 * 3. On desktop devices, expand the width to 350 pixels, maintaining the same
 *    positioning as tablet devices.
 * 4. On tablet and desktop devices, hide the menu trigger, as the menu items
 *    are always visible on the left side of the viewport.
 * 5. The `.is-open` state can be toggled by JavaScript to indicate whether
 *    the menu is open or closed.
 * 6. Transform the hamburger button into an X button.
 * 7. On mobile devices, hide the menu items.  The menu trigger is visible and
 *    can be used to reveal the menu.
 * 8. On mobile devices, set the width to 100%, so that the menu fills the
 *    entire width of the screen when revealed.
 * 9. On tablet and desktop devices, display the menu items.  The menu itself
 *    is fixed to the left side of the viewport.
 * 10. On tablet and desktop devices where the screen is taller than 750 pixels,
 *     display the menu items in the middle of the available vertical space.
 * 11. On tablet and desktop devices where the screen is shorter than 750
 *     pixels, display the menu items below the logo.
 *
 * Example HTML:
 *
 * <nav id="menu">
 *   <div class="menu-trigger"><span></span></div>
 *   <div class="menu-items">
 *     <ul>
 *       <li><a href="/">Home</a></li>
 *       <li><a href="/docs/">Documentation</a></li>
 *     </ul>
 *   </div>
 * </nav>
 */

#menu
  height: 100px // [1]
  +breakpoint("tablet")
    position: fixed // [2]
    top: 0
    left: 0
    width: 260px
    height: 100%
    z-index: 10
    border-right: 1px solid #222
    text-align: center
  +breakpoint("desktop")
    width: 350px // [3]
    @media screen and (max-height: 750px)
      overflow-y scroll
  
  .menu-logo
    display: block
    float: left // [0]
    height: 100px
    padding-left: 56px
    background: url(../../images/logo.svg) center left no-repeat
    background-size: 40px auto
    margin: 0 0 0 40px
    font-size: 14px
    line-height: 44px
    color: #fff
    cursor: pointer
    +breakpoint("tablet")
      position: relative
      float: none
      max-width: 130px
      z-index: 101
      background-position: center
      background-size: auto 80%
      margin: 60px auto 10px auto
      text-align: center
      font-size: 16px
      line-height: 22px
    &:hover
      text-decoration: none
  
  .menu-trigger
    float: right
    width: 23px
    height: 10px
    padding-top: 7px
    margin: 43px 40px 0 0
    cursor: pointer
    span, span:before, span:after
      display: block
      width: 100%
      height: 2px
      background: white
      -webkit-transition: .3s ease-out
      transition: .3s ease-out
      backface-visibility: hidden
    span
      position: relative
      &:before, &:after
        position: absolute
        content: ""
      &:before
        top: -7px
      &:after
        top: 7px
    +breakpoint("tablet")
      display: none // [4]
    &.is-open // [5]
      span
        background transparent
        &:before // [6]
          -webkit-transform translate(0, 7px) rotate(-45deg)
          transform translate(0, 7px) rotate(-45deg)
        &:after // [6]
          -webkit-transform translate(0, -7px) rotate(45deg)
          transform translate(0, -7px) rotate(45deg)
          
  .menu-items
    display: none // [7]
    width: 100% // [8]
    z-index: 99
    +breakpoint("tablet")
      position: absolute
      top: 55% // [10]
      display: block // [9]
      height: auto // [10]
      background: none
      text-align: left
      -webkit-transform translateY(-50%) // [10]
      transform translateY(-50%)  // [10]
      @media screen and (max-height: 750px)
        position: relative
        top: auto // [11]
        margin-top: 80px
        -webkit-transform: none // [11]
        transform: none // [11]

      li
        padding-left: 26%
        margin-bottom: 15px
        -webkit-transition: box-shadow .3s ease-in-out
        transition: box-shadow .3s ease-in-out
        &.active:nth-child(1) // Home
          box-shadow: inset 5px 0 0 0 green
          a
            color: green
        &.active:nth-child(2) // Documentation
          box-shadow: inset 5px 0 0 0 blue
          -webkit-transition: .5s
          transition: .5s
          a
            color: blue
        &.active:nth-child(3) // Features
          box-shadow: inset 5px 0 0 0 yellow
          a
            color: yellow
        &.active:nth-child(5) // Features
          box-shadow: inset 5px 0 0 0 blue
          a
            color: blue
        a
          font-size: 24px
          line-height: 2.0
          color: white

    &.is-open // [5]
      position: absolute
      top: 60px
      display: block
      height: calc(100vh - 60px)
      background: rgba(#121212,.98)
      text-align: center

      & > ul
        position: absolute
        top: 50%
        width: 100%
        padding-left: 0
        margin-top: -44px
        -webkit-transform: translateY(-50%)
        transform: translateY(-50%)
        +breakpoint("mobile-landscape")
          margin-top: 0
      li
        margin: 30px 0
      a
        font-size: 30px
        color: white

  .supported
    display none
    +breakpoint("tablet")
      display block




/* Toolbar
   -------------------------------------------------------------------------- */

#toolbar
  +breakpoint("tablet")
    clearfix()
    padding-top: 60px
    padding-right: 20px
    padding-left: 280px
  +breakpoint("desktop")
    padding-right: 50px
    padding-left: 400px


/**
 * Search.
 *
 * 1. ???
 * 2. Translate the search field 100 pixels down the Y-axis, accounting for the
 *    menu above it, which has a height of 100 pixels.
 * 3. On mobile devices, add a dark grey border around the search field, setting
 *    it off from the menu above and content below.  This mimics UI patterns
 *    common to mobile applications.
 * 4. On tablet and desktop devices, reset the box model and background, as the
 *    search box moves into the now visible toolbar along with other controls.
 */

#toolbar .toolbar-search
  position: absolute // [1]
  display: inline-block
  width: 100%
  padding: 20px
  box-sizing: border-box
  background: #212121 // [3]
  -webkit-transform: translateY(100px) // [2]
  transform: translateY(100px) // [2]
  +breakpoint("tablet") // [4]
    width: 200px
    padding: 0
    box-sizing: initial
    background: none
    -webkit-transform: none
    transform: none

  form
    width: 100%
    height: 46px
    padding: 0
    border: 1px solid rgba(white,.2)
    border-radius: 48px
    margin: 0
    text-align: center
    input
      display: inline-block
      width: 145px
      height: 44px
      padding-left: 0
      border: none
      background: none
      text-align: left
      font-size: 14px
      color: white
      &::-webkit-input-placeholder
        color: rgba(white,1)
      &:-moz-placeholder
        color: rgba(white,1)
      &:-ms-input-placeholder
        color: rgba(white,1)
    button
      position: relative
      top: 14px
      display: inline-block
      width: 18px
      height: 18px
      border: none
      background: url(../../images/ico_search.svg) no-repeat
      margin-left: 10px
      margin-right: 14px
      vertical-align: top


/**
 * Social networking.
 *
 * The social section of the toolbar provides links to social networks where
 * people can interact.
 *
 * The social networks represented should be contained in an unordered list,
 * where each network is a list item.  Each item can, optionally, have an
 * associated count to display a number of follows, favorites, or other
 * statistic applicable to the network.
 *
 * 1. On mobile devices, do not display social networks.  The search field is
 *    given the full width on mobile devices, as that is more important
 *    functionality.
 * 2. On tablet and desktop devices, display social networks.
 * 3. Set anchor element positioning to relative, so that...
 * 4. any count can be absolutely positioned next to the social network.
 * 5. Increase the margin of the last item, to allow room for the count which is
 *    absolutely positioned to its right.
 * 6. Shift the background position, so that the Facebook icon within the image
 *    sprite is displayed.
 * 7. Shift the background position, so that the GitHub icon within the image
 *    sprite is displayed.
 *
 * Example HTML:
 *
 * <div id="toolbar">
 *   <div class="social">
 *     <ul>
 *       <li class="twitter"><a href="https://twitter.com/passportjs"></a></li>
 *       <li class="github"><a href="http://github.com/jaredhanson/passport"><span class="count">42</span></a></li>
 *     </ul>
 *   </div>
 * </div>
 */

#toolbar .toolbar-social
  display: none // [1]
  text-decoration: none
  +breakpoint("tablet")
    display: inline-block // [2]
    float: right
    margin-top: 10px

  li
    display: inline-block
    width: 26px
    height: 26px
    margin-right: 5px
    vertical-align: middle
    &:last-child
      margin-right: 68px // [5]
  a
    position: relative // [3]
    display: block
    height: 26px
    width: 25px
    background: url(../../images/ico_social.svg) no-repeat
    .count
      display: none
      +breakpoint("tablet")
        position: absolute // [4]
        top: 2px
        left: 33px
        display: block
        height: 22px
        padding: 0 10px
        border-radius: 3px
        background: #333
        font-size: 12px
        font-weight: bold
        line-height: 23px
        color: rgba(255,255,255,.8)
      &:after
        +breakpoint("tablet")
          position: absolute
          top: 50%
          left: -3px
          width: 0
          height: 0
          border-width: 3px 3px 3px 0
          border-style: solid
          border-color: transparent #333 transparent transparent
          margin-top: -3px
          content: ""
  .facebook
    a
      background-position: -25px 0 // [6]
  .github
    a
      background-position: -51px 0 // [7]




/* Content
   -------------------------------------------------------------------------- */

/**
 * Content.
 *
 * The content element contains the content of the page.
 *
 * Not included in the content element are navigational UI elements, such as the
 * menu and search field.
 *
 * 1. Apply 120 pixels of margin, allowing room for the menu and search field,
 *    which are stacked vertically above the content on mobile devices.
 * 2. On tablet and desktop devices, reduce the margin to 60px as the menu is
 *    repositioned to the left, leaving only the search field above the content.
 * 3. On tablet devices, apply 280 pixels of padding to the left, to account for
 *    the fixed positioned menu, which has a 260 pixel width.  An additional 20
 *    pixels is added for padding between the menu and content.
 * 4. On desktop devices, increase the padding to 350 pixels, to account for the
 *    expanded width of the menu.
 */

#content
  clearfix()
  margin-top: 120px // [1]
  +breakpoint("tablet")
    position: relative
    padding-left: 280px // [3]
    padding-right: 20px
    margin-top: 60px // [2]
  +breakpoint("desktop")
    padding-left: 370px // [4]

  .supported
    display block
    margin-top 40px
    +breakpoint("tablet")
      display none




/* Controls
   -------------------------------------------------------------------------- */

/**
 * Go to Top control.
 *
 * The Go to Top control is used to scroll the page to the top of the document.
 *
 * 1. Fix the position of the control...
 * 2. to the bottom right hand corner of the viewport and...
 * 3. do not display.
 * 4. The `.is-visible` state can be toggled by JavaScript to make the control
 *    visible, however...
 * 5. on desktop devices, the control is always hidden, giving preference to
 *    scroll bars.
 */

#go-top
  position: fixed // [1]
  right: 10px // [2]
  bottom: 10px // [2]
  display: none // [3]
  width: 50px
  height: 50px
  border-radius: 50%
  background-color: rgba(white,.3)
  text-align: center
  font-size: 30px
  line-height: 1.9
  color: white

  &.is-visible // [4]
    display: block
    z-index: 99
    +breakpoint("desktop")
      display: none


.supported
  clear both
  padding 10px
  bottom 0
  left 0
  font-size 14px
  text-align center
  color #999
  z-index 10
  margin 0 auto
  +breakpoint("tablet")
    width 100%
    position absolute
    bottom 20px
  +breakpoint("tablet")
    @media screen and ( max-height: 750px )
      position relative
      bottom auto
      margin-top 80px

  .auth0
    width 24px
    height 24px
    display inline-block
    margin-left: 6px;
    margin-bottom: -8px;
    background url(../../images/supported_logo.svg) no-repeat
